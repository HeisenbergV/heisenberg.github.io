<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coder on Heisenberg</title>
    <link>https://heisenbergv.github.io/categories/coder/</link>
    <description>Recent content in coder on Heisenberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Tue, 27 Aug 2019 15:50:19 +0800</lastBuildDate>
    
	<atom:link href="https://heisenbergv.github.io/categories/coder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSAPP(1) - 信息的表示和处理</title>
      <link>https://heisenbergv.github.io/posts/coder/20190827-csapp1/</link>
      <pubDate>Tue, 27 Aug 2019 15:50:19 +0800</pubDate>
      
      <guid>https://heisenbergv.github.io/posts/coder/20190827-csapp1/</guid>
      <description>计算机存的什么 计算机存储的是二进制，每一位存储的是0或1。大多数计算机使用1字节（也就是8位），作为最小可寻址的内存单位。 每个字节都有一个唯一的数字来标识，也就是地址（address）。每个计算机都有一个字长（word size），也就是常说的64位操作系统，32位操作系统。字长决定了虚拟地址空间的大小， 比如32位有4GB的内存空间，64位则是16EB（1TB = 1024GB，1 EB = 1,024 PB = 1,048,576 TB）。 整</description>
    </item>
    
    <item>
      <title>Goroutine</title>
      <link>https://heisenbergv.github.io/posts/coder/20190807-groutine/</link>
      <pubDate>Wed, 07 Aug 2019 15:50:19 +0800</pubDate>
      
      <guid>https://heisenbergv.github.io/posts/coder/20190807-groutine/</guid>
      <description>并发与并行 并行(parallel): 指在同一时刻,有多条指令在多个处理器上同时执行(靠机器) 并发(concurrency): 指在同一时刻只能有一条指令执行,但多个进程指令被快速的轮换执行,宏观看起来是并行的,微观是cpu在不断的快速切换.(操作系统) 线程安全问题 协作式调度: 当线程终止或阻塞是发生调度 =&amp;gt; &amp;ldquo;主动让出&amp;rdquo; 抢占式调度: 允许逻辑上将可继续运行的线程在运行过程中暂停的调度</description>
    </item>
    
  </channel>
</rss>